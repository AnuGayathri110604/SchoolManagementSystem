/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package schoolmanagementsystem;

import static java.awt.SystemColor.text;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class reportcard extends javax.swing.JFrame {

    /**
     * Creates new form reportcard
     */
    public reportcard() {
        initComponents();
       
        
        // Set the background color of the text pane
        text.setBackground(new java.awt.Color(255, 0, 102));
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        chem = new javax.swing.JTextField();
        phy = new javax.swing.JTextField();
        math = new javax.swing.JTextField();
        cl = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        roll = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        jTextField4.setText("jTextField1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 102));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        text.setBackground(new java.awt.Color(255, 0, 102));
        text.setForeground(new java.awt.Color(255, 255, 255));
        text.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(text);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, 270, 550));

        jLabel1.setBackground(new java.awt.Color(255, 0, 102));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("  REPORT");
        jLabel1.setOpaque(true);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 20, 97, 32));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("ID:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Roll Number:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("Name:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 199, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setText("Class:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 253, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 102));
        jLabel6.setText("-------------------------------------------------------------------------");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 292, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setText("Maths:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, -1, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setText("Physics:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, -1, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setText("Chemistry:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));
        getContentPane().add(chem, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, 218, -1));
        getContentPane().add(phy, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, 218, -1));
        getContentPane().add(math, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 380, 218, -1));
        getContentPane().add(cl, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, 219, -1));
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 219, -1));
        getContentPane().add(roll, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 219, -1));
        getContentPane().add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 100, 219, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 102));
        jLabel12.setText("MARKS:");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 530, 90, -1));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel11.setText("BACK");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sms", "root", "");

        String idText = id.getText();
        String rollNumber = roll.getText();

        String sqlInsert = "INSERT INTO reportcard (id, name, class, phy, chem, math, rollnumber, grade) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
        String sqlUpdate = "UPDATE reportcard SET phy=?, chem=?, math=?, grade=? WHERE id=? AND class=? AND rollnumber=?";

        String p = phy.getText();
        double s1 = Double.parseDouble(p);
        String m = math.getText();
        double s2 = Double.parseDouble(m);
        String c = chem.getText();
        double s3 = Double.parseDouble(c);

        // Check if the entered marks are within 100
        if (s1 > 100 || s2 > 100 || s3 > 100) {
            JOptionPane.showMessageDialog(null, "Marks are exceeding the total score (100)");
            return; // Exit the function
        }
        double sum=(s1+s2+s3);
        double total = ((sum) * 100) / 300;

        String grade;

        if (total >= 80) {
            grade = "A+";
        } else if (total >= 70 && total < 80) {
            grade = "A";
        } else if (total >= 60 && total < 70) {
            grade = "B";
        } else if (total >= 50 && total < 60) {
            grade = "C";
        } else if (total >= 40 && total < 50) {
            grade = "D";
        } else {
            grade = "Fail";
        }

        String n = name.getText();
        String cla = cl.getText();
        String ph = phy.getText();
        String mt = math.getText();
        String ch = chem.getText();

        // Check if the student details exist in the stureg table
        String checkQuery = "SELECT * FROM stureg WHERE id = ? AND name = ? AND class = ? AND roll= ?";
        PreparedStatement checkStatement = conn.prepareStatement(checkQuery);
        checkStatement.setString(1, idText);
        checkStatement.setString(2, n);
        checkStatement.setString(3, cla);
        checkStatement.setString(4, rollNumber);
        ResultSet checkResult = checkStatement.executeQuery();

        text.setFont(new java.awt.Font("Times New Roman", java.awt.Font.BOLD, 18));

        if (!checkResult.next()) {
            text.setText("Student Details Not Found.");
            return; // Exit the function
        }

        String[] options = { "Update Marks", "No" };
        int choice = JOptionPane.showOptionDialog(null, "Data found. Do you want to update marks?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[1]);

        if (choice == JOptionPane.YES_OPTION) {
            // If updating marks, check if the record exists in the reportcard table
            String checkReportQuery = "SELECT * FROM reportcard WHERE id = ? AND class = ? AND rollnumber = ?";
            PreparedStatement checkReportStatement = conn.prepareStatement(checkReportQuery);
            checkReportStatement.setString(1, idText);
            checkReportStatement.setString(2, cla);
            checkReportStatement.setString(3, rollNumber);
            ResultSet checkReportResult = checkReportStatement.executeQuery();

            if (!checkReportResult.next()) {
                // If the record doesn't exist in reportcard, insert the details
                PreparedStatement insertStatement = conn.prepareStatement(sqlInsert);
                insertStatement.setString(1, idText);
                insertStatement.setString(2, n);
                insertStatement.setString(3, cla);
                insertStatement.setString(4, ph);
                insertStatement.setString(5, ch);
                insertStatement.setString(6, mt);
                insertStatement.setString(7, rollNumber);
                insertStatement.setString(8, grade);
                insertStatement.executeUpdate();

                text.setText("REPORT CARD\n\nStudent Name: " + n + "\nClass: " + cla + "\n\n-----------------------\nMarks\n\nPhysics: " + ph + "\nChemistry: " + ch + "\nMath: " + mt + "\nTotal: "+sum+"/300"+"\nGrade: " + grade);
            } else {
                // Update marks in the reportcard table
                PreparedStatement updateStatement = conn.prepareStatement(sqlUpdate);
                updateStatement.setString(1, ph);
                updateStatement.setString(2, ch);
                updateStatement.setString(3, mt);
                updateStatement.setString(4, grade);
                updateStatement.setString(5, idText);
                updateStatement.setString(6, cla);
                updateStatement.setString(7, rollNumber);
                updateStatement.executeUpdate();

                text.setText("Marks Updated for " + n+"\n\nREPORT CARD\n\nStudent Name: " + n + "\nClass: " + cla + "\n\n-----------------------\nMarks\n\nPhysics: " + ph + "\nChemistry: " + ch + "\nMath: " + mt +"\nTotal: "+sum+"/300"+ "\nGrade: " + grade);

                // Display the report card information
                
            }
        } else {
            text.setText("Report Card Of " + n + "\nNot Updated");
        }

        conn.close();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        welcome obj =new welcome();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel11MouseClicked
private void deleteReportCardRecord(String studentID) {
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/sms", "root", "");

        String deleteReportSql = "DELETE FROM reportcard WHERE id = ?";
        PreparedStatement deleteReportStmt = conn.prepareStatement(deleteReportSql);
        deleteReportStmt.setString(1, studentID);
        deleteReportStmt.executeUpdate();

        conn.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reportcard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reportcard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reportcard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reportcard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reportcard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField chem;
    private javax.swing.JTextField cl;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField math;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phy;
    private javax.swing.JTextField roll;
    private javax.swing.JTextPane text;
    // End of variables declaration//GEN-END:variables
}
